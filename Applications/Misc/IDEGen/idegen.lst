              	; --------------------------------------
              	; zasm: assemble "idegen.asm"
              	; date: 2024-09-01 20:40:23
              	; --------------------------------------


              	;
              	;**************************************************************
              	;*
              	;*       N A B U   I D E   S Y S T E M   G E N E R A T E
              	;*
              	;*     This utility is used to format and prepare an attached
              	;*     IDE drive to be booted off of. The user can format the
              	;*     drive, and then write a bootsector, font GRB, and
              	;*     image onto the disk.
              	;*
              	;**************************************************************
              	;
              	
              	; Equates
0005:         	bdos	equ	0x0005
005C:         	fcb	equ	0x005C
              	
0001:         	b_coin	equ	0x01
0002:         	b_cout	equ	0x02
0009:         	b_print	equ	0x09
000F:         	b_open	equ	0x0F
0010:         	b_close	equ	0x10
0014:         	b_read	equ	0x14
0015:         	b_write	equ	0x15
0016:         	b_make	equ	0x16
001A:         	b_dma	equ	0x1A
              	
00C0:         	id_base	equ	0xC0
              	
              	; Program start
0100:         		org	0x0100
              		
              		
              		; Print banner
0100: F3      	start:	di	
0101: 0E09    		ld	c,b_print
0103: 11E202  		ld	de,splash
0106: CD0500  		call	bdos
              	
              		; Get system image
0109: 0E09    	getsys: ld	c,b_print
010B: 111603  		ld	de,cfgmsg
010E: CD0500  		call	bdos
0111: CD8C02  		call	getopt
              		
              		; Exit option
0114: FE39    		cp	'9'
0116: C8      		ret	z
              		
              		; System Option #1
0117: 21B60D  		ld	hl,sys_ide_nfs	; pointer to image
011A: FE31    		cp	'1'
011C: 2810    		jr	z,setsys
              		
              		; System Option #2
011E: 219C32  		ld	hl,sys_ide_fdc	; pointer to image
0121: FE32    		cp	'2'
0123: 2809    		jr	z,setsys
              		
              		; System Option #3
0125: 212853  		ld	hl,sys_ide	; pointer to image
0128: FE33    		cp	'3'
012A: 2802    		jr	z,setsys
              	
              	
              		; Invalid, reprompt
012C: 18DB    		jr	getsys
              		
              		; Set system image
012E: 22DE02  	setsys:	ld	(sysimg),hl
              	
              		; Now lets get the logical drive #
0131: 0E09    	getcurd:ld	c,b_print
0133: 119E03  		ld	de,drvmsg
0136: CD0500  		call	bdos
0139: CD8C02  		call	getopt
              		
013C: 06E0    		ld	b,0xE0
013E: FE30    		cp	'0'
0140: 2808    		jr	z,setcurd
0142: 06F0    		ld	b,0xF0
0144: FE31    		cp	'1'
0146: 2802    		jr	z,setcurd
0148: 18E7    		jr	getcurd
              		
014A: 78      	setcurd:ld	a,b
014B: 32E002  		ld	(curdrv),a
              	
              		; Format option
014E: 0E09    		ld	c,b_print
0150: 11B803  		ld	de,formmsg
0153: CD0500  		call	bdos
0156: CD8C02  		call	getopt
0159: 32E102  		ld	(doform),a
              		
              		; Ready to begin?
015C: 0E09    		ld	c,b_print
015E: 11CF03  		ld	de,readymsg
0161: CD0500  		call	bdos
0164: CD8C02  		call	getopt
0167: FE59    		cp	'Y'
0169: C20901  		jp	nz,getsys
              		
              		; Begin operation, check to made sure drive is present
016C: 3AE002  		ld	a,(curdrv)
016F: D3CC    		out	(id_base+0xC),a
0171: 06FF    		ld	b,255
0173: CDD902  		call	stall
0176: DBCC    		in	a,(id_base+0xC)
0178: 3C      		inc	a
0179: 200E    		jr	nz,format
              		
              		; Error!
017B: 0E09    		ld	c,b_print
017D: 114904  		ld	de,nodmsg
0180: CD0500  		call	bdos
0183: AF      		xor	a
0184: D3CC    		out	(id_base+0xC),a
0186: C30000  		jp	0
              		
              		; Do a format?
0189: CD7F02  	format:	call	id_busy
018C: 3AE102  		ld	a,(doform)
018F: FE59    		cp	'Y'
0191: C2E801  		jp	nz,sysgen
              		
0194: 0E09    		ld	c,b_print
0196: 11E903  		ld	de,fnowmsg
0199: CD0500  		call	bdos
              		
              		; Fill top of memory with 0xE5
019C: 214871  		ld	hl,top
019F: 0600    		ld	b,0
01A1: 3EE5    		ld	a,0xE5
01A3: 77      	format0:ld	(hl),a
01A4: 23      		inc	hl
01A5: 77      		ld	(hl),a
01A6: 23      		inc	hl
01A7: 10FA    		djnz	format0
              		
              		; Write 65536 sectors
01A9: 010000  		ld	bc,0
01AC: 1608    		ld	d,8
              	
              		; Set transfer registers
01AE: 79      	format1:ld	a,c
01AF: D3C6    		out	(id_base+0x6),a
01B1: 78      		ld	a,b
01B2: D3C8    		out	(id_base+0x8),a
01B4: AF      		xor	a
01B5: D3CA    		out	(id_base+0xA),a
              		
              		; Perform the write
01B7: C5      		push	bc
01B8: 214871  		ld	hl,top
01BB: CD5002  		call	write
01BE: F5      		push	af
01BF: 3EE7    		ld	a,0xE7
01C1: CD7702  		call	id_comm
01C4: F1      		pop	af
01C5: C1      		pop	bc
01C6: C23102  		jp	nz,ioerror
              	
              		; Increment counter
01C9: 03      		inc	bc
01CA: AF      		xor	a
01CB: B1      		or	c
01CC: 20E0    		jr	nz,format1
              	
01CE: 15      		dec	d
01CF: 200B    		jr	nz,format2
01D1: C5      		push	bc
01D2: 0E02    		ld	c,b_cout
01D4: 1E2E    		ld	e,'.'
01D6: CD0500  		call	bdos
01D9: C1      		pop	bc
01DA: 1608    		ld	d,8
              	
01DC: 78      	format2:ld	a,b
01DD: B1      		or	c
01DE: 20CE    		jr	nz,format1
              		
              		; Drop down to sysgen
01E0: 0E09    		ld	c,b_print
01E2: 110504  		ld	de,fdonemsg
01E5: CD0500  		call	bdos
              		
              		; Generate system onto disk
01E8: 0E09    	sysgen:	ld	c,b_print
01EA: 111704  		ld	de,gnowmsg
01ED: CD0500  		call	bdos
              		
              		; Write GRB (Sectors 1-4)
01F0: 0604    		ld	b,4
01F2: 0E01    		ld	c,1
01F4: 219F04  		ld	hl,fontgrb
01F7: CD3C02  		call	trans
              		
              		; Write boot block (Sector 0)
              		; Configure boot parameters too
01FA: 2ADE02  		ld	hl,(sysimg)
01FD: 11A10C  		ld	de,boot+2
0200: EDA0    		ldi
0202: EDA0    		ldi
0204: 7E      		ld	a,(hl)
0205: D604    		sub	a,4
0207: 12      		ld	(de),a
              		
0208: 219F0C  		ld	hl,boot
020B: 0601    		ld	b,1
020D: 0E00    		ld	c,0
020F: CD3C02  		call	trans
              		
              		; Write system (Sectors 5+)
0212: 2ADE02  		ld	hl,(sysimg)
0215: 23      		inc	hl
0216: 23      		inc	hl
0217: 46      		ld	b,(hl)
0218: 0E05    		ld	c,5
021A: 23      		inc	hl
021B: CD3C02  		call	trans
              		
              		; All done
021E: 0E09    		ld	c,b_print
0220: 113204  		ld	de,gdonemsg
0223: CD0500  		call	bdos
              		
0226: 0E09    		ld	c,b_print
0228: 118504  		ld	de,donemsg
022B: CD0500  		call	bdos
              		
022E: C30000  		jp	0
              		
              		; Handle an IO error
0231: 0E09    	ioerror:ld	c,b_print 
0233: 116404  		ld	de,iomsg
0236: CD0500  		call	bdos
              	
0239: C30000  		jp	0
              	
              	; Transfers a number of blocks onto the IDE device
              	; b = Number of blocks to transfer
              	; c = Inital block
              	; hl = Source of data
023C: AF      	trans:	xor	a
023D: D3C8    		out	(id_base+0x8),a
023F: D3CA    		out	(id_base+0xA),a
              		
0241: 79      	trans0:	ld	a,c
0242: D3C6    		out	(id_base+0x6),a
0244: C5      		push	bc
0245: CD5002  		call	write
0248: C1      		pop	bc
0249: C23102  		jp	nz,ioerror
024C: 0C      		inc	c
024D: 10F2    		djnz	trans0
024F: C9      		ret
              	
              	; Executes a write command, data written from buffer
              	; hl = Source of data
              	;
              	; Returns hl += 512
              	; uses: af, bc, hl
0250: 3E01    	write:	ld	a,1
0252: D3C4    		out	(id_base+0x4),a
0254: CD7F02  		call	id_busy
0257: 3E30    		ld	a,0x30
0259: CD7702  		call	id_comm
025C: CD7002  		call	id_wdrq
025F: 0600    		ld	b,0
0261: 4E      	write0:	ld	c,(hl)
0262: 23      		inc	hl
0263: 7E      		ld	a,(hl)
0264: D3C1    		out	(id_base+1),a
0266: 23      		inc	hl
0267: 79      		ld	a,c
0268: D3C0    		out	(id_base),a
026A: 10F5    		djnz	write0
026C: CD7F02  		call	id_busy
026F: C9      		ret
              		
              	; Waits for a DRQ (Data Request)
              	;
              	; uses: af
0270: DBCE    	id_wdrq:in	a,(id_base+0xE)
0272: CB5F    		bit	3,a
0274: 28FA    		jr	z,id_wdrq
0276: C9      		ret
              		
              	; Issues an IDE command
              	; a = Command to issue
              	;
              	; uses: af
0277: F5      	id_comm:push	af
0278: CD7F02  		call	id_busy
027B: F1      		pop	af
027C: D3CE    		out	(id_base+0xE),a
027E: C9      		ret
              		
              		
              	; Waits for the IDE drive to no longer be busy
              	;
              	; Resets flag z on error
027F: DBCE    	id_busy:in	a,(id_base+0xE)
0281: CB77    		bit	6,a
0283: 28FA    		jr	z,id_busy
0285: CB7F    		bit	7,a
0287: 20F6    		jr	nz,id_busy
0289: CB47    		bit	0,a
028B: C9      		ret
              		
              	; Gets a single character option from the user
              	; Letters will be converted to upper case
              	;
              	; Returns character in A
              	; uses: all
028C: 0E0A    	getopt:	ld	c,0x0A
028E: 119B04  		ld	de,inpbuf
0291: CD0500  		call	bdos
0294: 3A9D04  		ld	a,(inpbuf+2)
              		
              	; Converts lowercase to uppercase
              	; a = Character to convert
              	;
              	; Returns uppercase in A
              	; uses: af
0297: E67F    	ltou:	and	0x7F
0299: FE61    		cp	0x61		; 'a'
029B: D8      		ret	c
029C: FE7B    		cp	0x7B		; '{'
029E: D0      		ret	nc
029F: D620    		sub	0x20
02A1: C9      		ret
              		
              	; Print decimal
              	; hl = value to print
              	;
              	; uses: all
02A2: 1630    	putd:	ld	d,'0'
02A4: 01F0D8  		ld	bc,0-10000
02A7: CDC002  		call	putd0
02AA: 0118FC  		ld	bc,0-1000
02AD: CDC002  		call	putd0
02B0: 019CFF  		ld	bc,0-100
02B3: CDC002  		call	putd0
02B6: 01F6FF  		ld	bc,0-10
02B9: CDC002  		call	putd0
02BC: 01FFFF  		ld	bc,0-1
02BF: 15      		dec	d
02C0: 3E2F    	putd0:	ld	a,'0'-1		; get character
02C2: 3C      	putd1:	inc	a
02C3: 09      		add	hl,bc
02C4: 38FC    		jr	c,putd1
02C6: ED42    		sbc	hl,bc
02C8: 47      		ld	b,a
02C9: BA      		cp	d		; check for leading zeros
02CA: C8      		ret	z
02CB: 15      		dec	d
              		
              		; Actually print character out
02CC: C5      		push	bc
02CD: D5      		push	de
02CE: E5      		push	hl
02CF: 58      		ld	e,b
02D0: 0E02    		ld	c,b_cout
02D2: CD0500  		call	bdos
02D5: E1      		pop	hl
02D6: D1      		pop	de
02D7: C1      		pop	bc
02D8: C9      		ret
              		
              	; Waits a little bit
              	; b = Number of cycles to stall for
              	;
              	; uses: b
02D9: C5      	stall:  push	bc
02DA: C1      		pop	bc
02DB: 10FC    		djnz	stall
02DD: C9      		ret
              		
              	; Variables
              		
02DE:         	sysimg:
02DE: 0000    		defw	0
              		
02E0:         	curdrv:
02E0: 00      		defb	0
              	
02E1:         	doform:
02E1: 00      		defb	0
              	
              	; Strings
              		
02E2:         	splash:
02E2: 4E414255		defb	'NABU IDE SysGen Utility',0x0A,0x0D
02E6: 20494445	
02EA: 20537973	
02EE: 47656E20	
02F2: 5574696C	
02F6: 6974790A	
02FA: 0D      	
02FB: 52657620		defb	'Rev 1a, tergav17 (Gavin)',0x0A,0x0D,'$'
02FF: 31612C20	
0303: 74657267	
0307: 61763137	
030B: 20284761	
030F: 76696E29	
0313: 0A0D24  	
              	
0316:         	cfgmsg:
0316: 0A0D5365		defb	0x0A,0x0D,'Select a System Image:',0x0A,0x0A,0x0D
031A: 6C656374	
031E: 20612053	
0322: 79737465	
0326: 6D20496D	
032A: 6167653A	
032E: 0A0A0D  	
              		
0331: 20202020		defb	'    1: IshkurCP/M IDE + NFS',0x0A,0x0D
0335: 313A2049	
0339: 73686B75	
033D: 7243502F	
0341: 4D204944	
0345: 45202B20	
0349: 4E46530A	
034D: 0D      	
034E: 20202020		defb	'    2: IshkurCP/M IDE + FDC',0x0A,0x0D
0352: 323A2049	
0356: 73686B75	
035A: 7243502F	
035E: 4D204944	
0362: 45202B20	
0366: 4644430A	
036A: 0D      	
036B: 20202020		defb	'    3: IshkurCP/M IDE Only',0x0A,0x0D
036F: 333A2049	
0373: 73686B75	
0377: 7243502F	
037B: 4D204944	
037F: 45204F6E	
0383: 6C790A0D	
0387: 20202020		defb	'    9: Exit',0x0A,0x0A,0x0D
038B: 393A2045	
038F: 7869740A	
0393: 0A0D    	
0395: 4F707469		defb	'Option: $'
0399: 6F6E3A20	
039D: 24      	
              		
              		
039E:         	drvmsg:	
039E: 0A0D4C6F		defb	0x0A,0x0D,'Logical Drive # (0,1): $'
03A2: 67696361	
03A6: 6C204472	
03AA: 69766520	
03AE: 23202830	
03B2: 2C31293A	
03B6: 2024    	
              	
03B8:         	formmsg:	
03B8: 0A0D466F		defb	0x0A,0x0D,'Format Disk? (Y,N): $'
03BC: 726D6174	
03C0: 20446973	
03C4: 6B3F2028	
03C8: 592C4E29	
03CC: 3A2024  	
              		
03CF:         	readymsg:	
03CF: 0A0D5265		defb	0x0A,0x0D,'Ready to begin? (Y,N): $'
03D3: 61647920	
03D7: 746F2062	
03DB: 6567696E	
03DF: 3F202859	
03E3: 2C4E293A	
03E7: 2024    	
              	
03E9:         	fnowmsg:	
03E9: 0A0D466F		defb	0x0A,0x0D,'Formatting Drive Now...',0x0A,0x0D,'$'
03ED: 726D6174	
03F1: 74696E67	
03F5: 20447269	
03F9: 7665204E	
03FD: 6F772E2E	
0401: 2E0A0D24	
              		
0405:         	fdonemsg:	
0405: 0A0D466F		defb	0x0A,0x0D,'Format Complete$'
0409: 726D6174	
040D: 20436F6D	
0411: 706C6574	
0415: 6524    	
              		
0417:         	gnowmsg:
0417: 0A0D4765		defb	0x0A,0x0D,'Generating System Now...$'
041B: 6E657261	
041F: 74696E67	
0423: 20537973	
0427: 74656D20	
042B: 4E6F772E	
042F: 2E2E24  	
              		
0432:         	gdonemsg:
0432: 0A0D5379		defb	0x0A,0x0D,'System Generate Done$'
0436: 7374656D	
043A: 2047656E	
043E: 65726174	
0442: 6520446F	
0446: 6E6524  	
              	
0449:         	nodmsg:	
0449: 0A0D4572		defb	0x0A,0x0D,'Error: No Disk Detected!$'
044D: 726F723A	
0451: 204E6F20	
0455: 4469736B	
0459: 20446574	
045D: 65637465	
0461: 642124  	
              		
0464:         	iomsg:	
0464: 0A0D4572		defb	0x0A,0x0D,'Error: Sector Transfer Failed!$'	
0468: 726F723A	
046C: 20536563	
0470: 746F7220	
0474: 5472616E	
0478: 73666572	
047C: 20466169	
0480: 6C656421	
0484: 24      	
              		
0485:         	donemsg:	
0485: 0A0D4F70		defb	0x0A,0x0D,'Operation Complete!$'
0489: 65726174	
048D: 696F6E20	
0491: 436F6D70	
0495: 6C657465	
0499: 2124    	
              	
              	; Input buffer
049B: 02000000	inpbuf:	defb	0x02, 0x00, 0x00, 0x00
              		
              	; Font GRB, load into sectors 1-4
049F:         	fontgrb:
              	#insert	"font.bin"
              	
0C9F:         	boot:
              	#insert	"../../../Output/Nabu_IDE/boot.bin"
              	
0DB6:         	sys_ide_nfs:
0DB6: 00DC    		defw	0xDC00		; Load in address
0DB8: 13      		defb	19		; Sectors to write
              	#insert "../../../Output/Nabu_IDE/ide_nfs_cpm22.bin"
              	
329C:         	sys_ide_fdc:
329C: 00DC    		defw	0xDC00		; Load in address
329E: 11      		defb	17		; Sectors to write
              	#insert "../../../Output/Nabu_IDE/ide_fdc_cpm22.bin"
              	
5328:         	sys_ide:
5328: 00E4    		defw	0xE400		; Load in address
532A: 0F      		defb	15		; Sectors to write
              	#insert "../../../Output/Nabu_IDE/ide_cpm22.bin"
              		
              	; Top of program, use it to store stuff
7148:         	top:


; +++ segments +++

#CODE          = $0100 =   256,  size = $7048 = 28744

; +++ global symbols +++

_end        = $7148 = 29000          idegen.asm:31 (unused)
_size       = $7048 = 28744          idegen.asm:31 (unused)
b_close     = $0010 =    16          idegen.asm:22 (unused)
b_coin      = $0001 =     1          idegen.asm:18 (unused)
b_cout      = $0002 =     2          idegen.asm:19
b_dma       = $001A =    26          idegen.asm:26 (unused)
b_make      = $0016 =    22          idegen.asm:25 (unused)
b_open      = $000F =    15          idegen.asm:21 (unused)
b_print     = $0009 =     9          idegen.asm:20
b_read      = $0014 =    20          idegen.asm:23 (unused)
b_write     = $0015 =    21          idegen.asm:24 (unused)
bdos        = $0005 =     5          idegen.asm:15
boot        = $0C9F =  3231          idegen.asm:445
cfgmsg      = $0316 =   790          idegen.asm:398
curdrv      = $02E0 =   736          idegen.asm:386
doform      = $02E1 =   737          idegen.asm:389
donemsg     = $0485 =  1157          idegen.asm:435
drvmsg      = $039E =   926          idegen.asm:408
fcb         = $005C =    92          idegen.asm:16 (unused)
fdonemsg    = $0405 =  1029          idegen.asm:420
fnowmsg     = $03E9 =  1001          idegen.asm:417
fontgrb     = $049F =  1183          idegen.asm:442
format      = $0189 =   393          idegen.asm:122
format0     = $01A3 =   419          idegen.asm:135
format1     = $01AE =   430          idegen.asm:146
format2     = $01DC =   476          idegen.asm:179
formmsg     = $03B8 =   952          idegen.asm:411
gdonemsg    = $0432 =  1074          idegen.asm:426
getcurd     = $0131 =   305          idegen.asm:73
getopt      = $028C =   652          idegen.asm:317
getsys      = $0109 =   265          idegen.asm:41
gnowmsg     = $0417 =  1047          idegen.asm:423
id_base     = $00C0 =   192          idegen.asm:28
id_busy     = $027F =   639          idegen.asm:304
id_comm     = $0277 =   631          idegen.asm:294
id_wdrq     = $0270 =   624          idegen.asm:285
inpbuf      = $049B =  1179          idegen.asm:439
ioerror     = $0231 =   561          idegen.asm:235
iomsg       = $0464 =  1124          idegen.asm:432
ltou        = $0297 =   663          idegen.asm:327 (unused)
nodmsg      = $0449 =  1097          idegen.asm:429
putd        = $02A2 =   674          idegen.asm:339 (unused)
putd0       = $02C0 =   704          idegen.asm:350
putd1       = $02C2 =   706          idegen.asm:351
readymsg    = $03CF =   975          idegen.asm:414
setcurd     = $014A =   330          idegen.asm:86
setsys      = $012E =   302          idegen.asm:70
splash      = $02E2 =   738          idegen.asm:394
stall       = $02D9 =   729          idegen.asm:376
start       = $0100 =   256          idegen.asm:35 (unused)
sys_ide     = $5328 = 21288          idegen.asm:458
sys_ide_fdc = $329C = 12956          idegen.asm:453
sys_ide_nfs = $0DB6 =  3510          idegen.asm:448
sysgen      = $01E8 =   488          idegen.asm:189
sysimg      = $02DE =   734          idegen.asm:383
top         = $7148 = 29000          idegen.asm:464
trans       = $023C =   572          idegen.asm:245
trans0      = $0241 =   577          idegen.asm:249
write       = $0250 =   592          idegen.asm:264
write0      = $0261 =   609          idegen.asm:271


total time: 0.0192 sec.
no errors
