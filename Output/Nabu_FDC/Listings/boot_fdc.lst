              	; --------------------------------------
              	; zasm: assemble "boot\boot_fdc.asm"
              	; date: 2024-09-01 20:40:23
              	; --------------------------------------


              	;
              	;**************************************************************
              	;*
              	;*        I S H K U R   F D C   B O O T S T R A P
              	;*
              	;**************************************************************
              	;
              	
0006:         	nsec	equ	6		; # of BDOS+BIOS sectors
0037:         	mem	equ	55		; CP/M image starts at mem*1024
              					; Should be same as cpm22.asm
              	
              		; NABU bootstrap loads in at 0xC000
C000:         		org	0xC000
              		
              	; Boot start same as NABU bootstrap
              	; Not sure why the nops are here, but I am keeping them
C000: 00      	base:	nop
C001: 00      		nop
C002: 00      		nop
C003: F3      		di
C004: 3100C0  		ld	sp,base
C007: 1803    		jr	tmsini
              	
              	; Panic!
              	; Just jump to the start of ROM at this point
C009: C30000  	panic:	jp	0
              		
              		; Change TMS color mode to indicate successful boot
C00C: DBA1    	tmsini:	in	a,(0xA1)
C00E: 3EE1    		ld	a,0xE1
C010: D3A1    		out	(0xA1),a
C012: 3E87    		ld	a,0x87
C014: D3A1    		out	(0xA1),a
              	
              		; Look for the FDC
C016: 0ECF    		ld	c,0xCF
C018: ED78    	findfd:	in	a,(c)
C01A: FE10    		cp	0x10
C01C: 280A    		jr	z,drsel
C01E: 0C      		inc	c
C01F: CA09C0  		jp	z,panic
C022: 3E0F    		ld	a,0x0F
C024: 81      		add	a,c
C025: 4F      		ld	c,a
C026: 18F0    		jr	findfd
              	
              		; FDC has been found, select drive
C028: 3E02    	drsel:	ld	a,2
C02A: ED79    		out	(c),a
C02C: 06FF    		ld	b,0xFF
C02E: CD88C0  		call	stall
              		
              		; Get command register
C031: 79      		ld	a,c
C032: D60F    		sub	0x0F
C034: 4F      		ld	c,a
C035: 3291C0  		ld	(fdaddr),a
              		
              		; Force FDC interrupt
C038: 3ED0    		ld	a,0xD0
C03A: ED79    		out	(c),a
              		
              		; Restore to track 0
              		; We should already be there, but just in case :)
C03C: 3E09    		ld	a,0x09
C03E: ED79    		out	(c),a
C040: CD8BC0  		call	fdbusy
              		
              		; Set memory load address
C043: 2100E4  		ld	hl,1024*(mem+2)
              		
              		; Set current sector to 1
C046: 3E01    	nextt:	ld	a,1
C048: 3292C0  		ld	(cursec),a
              		
              		; Step in 1 track
              		; This should be BDOS load code
C04B: 3E59    		ld	a,0x59
C04D: ED79    		out	(c),a
C04F: CD8BC0  		call	fdbusy
              		
              		; Time to read in a sector
              		; Set the sector register
C052: 3A92C0  	reads:	ld	a,(cursec)
C055: 0C      		inc	c
C056: 0C      		inc	c
C057: ED79    		out	(c),a
C059: 51      		ld	d,c
C05A: 14      		inc	d
C05B: 0D      		dec	c
C05C: 0D      		dec	c
              		
              		; Issue read command
C05D: 3E88    		ld	a,0x88
C05F: ED79    		out	(c),a
              		
              		; Wait for data to show up
C061: ED78    	dwait:	in	a,(c)
C063: 1F      		rra
C064: 300B    		jr	nc,nexts
C066: 1F      		rra
C067: 30F8    		jr	nc,dwait
C069: 41      		ld	b,c		; Data is here, read it in
C06A: 4A      		ld	c,d
C06B: EDA2    		ini
C06D: 04      		inc	b
C06E: 48      		ld	c,b
C06F: 18F0    		jr	dwait
              		
              		
              		; If all sectors are in, jump to image
C071: 3A93C0  	nexts:	ld	a,(nsecle)
C074: 3D      		dec	a
C075: CA00F2  		jp	z,0xE00+1024*(mem+2)
C078: 3293C0  		ld	(nsecle),a
              		
              		; Move on to the next sector
C07B: 3A92C0  		ld	a,(cursec)
C07E: 3C      		inc	a
C07F: FE06    		cp	6
C081: 28C3    		jr	z,nextt
C083: 3292C0  		ld	(cursec),a
C086: 18CA    		jr	reads
              		
              		
              	; Waits a little bit
              	;
              	; uses: b
C088: 10FE    	stall:	djnz	stall
C08A: C9      		ret
              		
              	; Waits until FDC is not busy
              	; c = FDC command address
              	;
              	; uses: a
C08B: ED78    	fdbusy:	in	a,(c)
C08D: 1F      		rra
C08E: 38FB    		jr	c,fdbusy
C090: C9      		ret
              	
              	; Variables
C091: 00      	fdaddr:	defb	0	; FDC address
C092: 01      	cursec:	defb	1	; Current sector
C093: 06      	nsecle:	defb	nsec	; Stores the number of sectors left


; +++ segments +++

#CODE          = $C000 = 49152,  size = $0094 =   148

; +++ global symbols +++

_end    = $C094 = 49300          boot\boot_fdc.asm:14 (unused)
_size   = $0094 =   148          boot\boot_fdc.asm:14 (unused)
base    = $C000 = 49152          boot\boot_fdc.asm:18
cursec  = $C092 = 49298          boot\boot_fdc.asm:144
drsel   = $C028 = 49192          boot\boot_fdc.asm:49
dwait   = $C061 = 49249          boot\boot_fdc.asm:99
fdaddr  = $C091 = 49297          boot\boot_fdc.asm:143
fdbusy  = $C08B = 49291          boot\boot_fdc.asm:137
findfd  = $C018 = 49176          boot\boot_fdc.asm:38
mem     = $0037 =    55          boot\boot_fdc.asm:10
nexts   = $C071 = 49265          boot\boot_fdc.asm:113
nextt   = $C046 = 49222          boot\boot_fdc.asm:74
nsec    = $0006 =     6          boot\boot_fdc.asm:9
nsecle  = $C093 = 49299          boot\boot_fdc.asm:145
panic   = $C009 = 49161          boot\boot_fdc.asm:27
reads   = $C052 = 49234          boot\boot_fdc.asm:85
stall   = $C088 = 49288          boot\boot_fdc.asm:130
tmsini  = $C00C = 49164          boot\boot_fdc.asm:30


total time: 0.0026 sec.
no errors
