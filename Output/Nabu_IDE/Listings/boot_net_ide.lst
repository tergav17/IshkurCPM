              	; --------------------------------------
              	; zasm: assemble "boot\boot_net_ide.asm"
              	; date: 2024-09-01 20:40:23
              	; --------------------------------------


              	;
              	;**************************************************************
              	;*
              	;*        I S H K U R   N E T B O O T   I D E
              	;*
              	;*    Reads the first 512 bytes of an IDE device 
              	;*    and jumps to it. Useful for testing an IDE
              	;*    device without a modified bootrom.
              	;*
              	;**************************************************************
              	;
              	
0006:         	nsec	equ	6		; # of BDOS+BIOS sectors 
              					; (1024 bytes each)
0037:         	mem	equ	55		; CP/M image starts at mem*1024
              					; Should be same as cpm22.asm
              					
0040:         	aydata	equ	0x40		; AY-3-8910 data port
0041:         	aylatc	equ	0x41		; AY-3-8910 latch port
              	
00C0:         	id_base	equ	0xC0		; IDE Base address
              	
              	
3000:         	scratch	equ	0x3000
              	; NABU bootstrap loads in at 0xB000
B000:         	entry	equ	0xB000 ; Bootloader entry address
              	
              	
              	
B000:         		org	entry
              	
B000: 00      		nop
B001: 00      		nop
B002: 00      		nop
B003:         	start:
B003: 310330  		ld sp, scratch + 3             ; Set stack pointer
B006: 3EC9    		ld a, $C9                      ; A = $C9 (return opcode)
B008: 320030  		ld (scratch), a                ; Place return statement at address 3000
B00B: CD0030  		call scratch                   ; Call address 3000 (and return)
B00E: 2A0130  		ld hl, (scratch + 1)           ; Load return address from stack, this will be the address immediately following the call 3000 statement
B011: 111300  		ld de, code_start-$ + 3        ; DE = address of bootloader relative to the call 0 return address
B014: 19      		add hl, de                     ; HL = absolute address where bootloader is currently residing
B015: 1100B0  		ld de, entry                   ; DE = address to copy bootloader to.
B018: 017300  		ld bc, code_length             ; BC = length of bootloader
B01B: EDB0    		ldir                           ; Relocate ourselves to known address
B01D: 2100B0  		ld hl, entry                   ; HL = entry point of bootloader
B020: E9      		jp (hl)                        ; Jump to bootloader
              	
              	.PHASE entry
B021:         	code_start:  equ $$
              	
              	; Boot start same as NABU bootstrap
B000:         	base:
B021: F3      		di
B022: 00      		nop
B023: 3100B0  		ld	sp,base
              	
              		; Select master
B026: 3EE0    		ld	a,0xE0
B028: D3CC    		out	(id_base+0xC),a
B02A: 060A    		ld	b,10
B02C: CD6EB0  		call	id_stal
B02F: DBCC    		in	a,(id_base+0xC)
B031: E6F0    		and	0xF0
B033: FEE0    		cp	0xE0
B035: C20000  		jp	nz,0
              	
              		; Set up registers
B038: AF      		xor	a
B039: D3C6    		out	(id_base+0x6),a
B03B: D3C8    		out	(id_base+0x8),a
B03D: D3CA    		out	(id_base+0xA),a
B03F: 3C      		inc	a
B040: D3C4    		out	(id_base+0x4),a
B042: 2100C0  		ld	hl,0xC000
              	
              		; Read physical
B045: CD36B0  		call	id_rphy
              	
              		; Check magic
B048: 2A00C0  		ld	hl,(0xC000)
B04B: 111806  		ld	de,0x0618
B04E: B7      		or	a
B04F: ED52    		sbc	hl,de
B051: C20000  		jp	nz,0
              	
B054: C300C0  		jp	0xC000
              		
              	; Executes a read command
              	; hl = Destination of data
              	;
              	; Returns hl += 512
              	; uses: af, bc, d, hl
B057: CD61B0  	id_rphy:call	id_busy
B05A: 3E20    		ld	a,0x20
B05C: CD59B0  		call	id_comm
B05F: CD52B0  		call	id_wdrq
B062: 1600    		ld	d,0
B064: 0EC0    		ld	c,id_base
B066: EDA2    	id_rph0:ini
B068: 0C      		inc	c
B069: EDA2    		ini
B06B: 0D      		dec	c
B06C: 15      		dec	d
B06D: 20F7    		jr	nz,id_rph0
B06F: CD61B0  		call	id_busy
B072: C9      		ret
              	
              	; Waits for a DRQ (Data Request)
              	;
              	; uses: af
B073: DBCE    	id_wdrq:in	a,(id_base+0xE)
B075: CB5F    		bit	3,a
B077: 28FA    		jr	z,id_wdrq
B079: C9      		ret
              		
              	; Issues an IDE command
              	; a = Command to issue
              	;
              	; uses: af
B07A: F5      	id_comm:push	af
B07B: CD61B0  		call	id_busy
B07E: F1      		pop	af
B07F: D3CE    		out	(id_base+0xE),a
B081: C9      		ret
              		
              		
              	; Waits for the IDE drive to no longer be busy
              	;
              	; Resets flag z on error
B082: DBCE    	id_busy:in	a,(id_base+0xE)
B084: CB77    		bit	6,a
B086: 28FA    		jr	z,id_busy
B088: CB7F    		bit	7,a
B08A: 20F6    		jr	nz,id_busy
B08C: CB47    		bit	0,a
B08E: C9      		ret
              	
              	
              	; Waits a little bit
              	;
              	; uses: b
B08F: C5      	id_stal:push	bc
B090: C1      		pop	bc
B091: 10FC    		djnz	id_stal
B093: C9      		ret
              		
              	
0073:         	code_length: equ $$-code_start
              	.DEPHASE


; +++ segments +++

#CODE          = $B000 = 45056,  size = $0094 =   148

; +++ global symbols +++

_end        = $B094 = 45204          boot\boot_net_ide.asm:30 (unused)
_size       = $0094 =   148          boot\boot_net_ide.asm:30 (unused)
aydata      = $0040 =    64          boot\boot_net_ide.asm:18 (unused)
aylatc      = $0041 =    65          boot\boot_net_ide.asm:19 (unused)
base        = $B000 = 45056          boot\boot_net_ide.asm:53
code_length = $0073 =   115          boot\boot_net_ide.asm:149
code_start  = $B021 = 45089          boot\boot_net_ide.asm:50
entry       = $B000 = 45056          boot\boot_net_ide.asm:26
id_base     = $00C0 =   192          boot\boot_net_ide.asm:21
id_busy     = $B061 = 45153          boot\boot_net_ide.asm:131
id_comm     = $B059 = 45145          boot\boot_net_ide.asm:121
id_rph0     = $B045 = 45125          boot\boot_net_ide.asm:100
id_rphy     = $B036 = 45110          boot\boot_net_ide.asm:94
id_stal     = $B06E = 45166          boot\boot_net_ide.asm:143
id_wdrq     = $B052 = 45138          boot\boot_net_ide.asm:112
mem         = $0037 =    55          boot\boot_net_ide.asm:15 (unused)
nsec        = $0006 =     6          boot\boot_net_ide.asm:13 (unused)
scratch     = $3000 = 12288          boot\boot_net_ide.asm:24
start       = $B003 = 45059          boot\boot_net_ide.asm:35 (unused)


total time: 0.0025 sec.
no errors
